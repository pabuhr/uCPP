This file contains instructions on how to build the latest version of uC++.


REQUIREMENTS

uC++ requires at least:

  * g++-7.0 or greater. uC++ does NOT compile using other compilers or operating systems.

  * gmake-3.79.1 or greater, which is available by anonymous ftp from any FSF mirror
    site. (All instructions below assume the "make" command is "gmake".)


DOWNLOAD

 Option 1: from GitHub

   * if git not installed, download and set up Git

     https://help.github.com/articles/set-up-git

   * clone repository to local directory

     $ git clone https://github.com/pabuhr/uCPP.git

   * change to build directory

     $ cd uCPP

 Option 2: from Waterloo

   * create build directory

     $ mkdir uCPP

   * change to build directory

     $ cd uCPP

   * copy repository to build directory

     $ wget http://plg.uwaterloo.ca/~usystem/pub/uSystem/u++-7.0.0.sh


AUTOMATIC uC++ BUILD

  Option 1:

    * into local directory ./u++-7.0.0 with u++ command installed in ./u++-7.0.0/bin 

      $ sh u++-7.0.0.sh

  Option 2:

    * into non-local directory /usr/local with u++ command installed in /usr/local/bin

      $ sudo sh u++-7.0.0.sh

  Option 3:

    * into specified directory /software/local with u++ command installed in
      /software/local/bin

      $ sh u++-7.0.0.sh -p /software/local -c /software/local/bin


MANUAL uC++ BUILD

  Option 1: GitHub

    * change to source directory

      $ cd source

  Option 2: Shellball

    * extract tarball

       $ sh u++-7.0.0.sh -e

    * change to source directory

       $ cd u++-7.0.0

  * Read the comments and edit the variables in the top level make file,
    ./Makefile.

  * Type "make" to get a list of supported configurations or read the list in
    the top level make file.

  * Type "make xxx", where xxx is one of the listed configurations, e.g.,
    "make linux-x86_64" to configure for a 64-bit x86 processor running linux.
    A CONFIG file is created and all Makefiles are modified with appropriate
    path names.

  * Type "make install" to compile and install uC++. To compile and install
    separately, type "make" to compile uC++ and then "make install" to move the
    necessary executables and libraries to the install location.

  * After installation is complete, the executable "u++" is created in the
    directory defined by INSTALLBINDIR in the top level make file.  Add this
    directory to your command path to access the compilation command u++.  While
    the "u++" command can be moved to any location, do not move the "lib" or
    "inc" directories, as the "u++" command contains hard-coded references to
    them, which are set at installation time.

  * Type "make clean" to remove any temporary files created during
    installation.

  * Directory INSTALLPREFIX/src/examples has a number of example uC++ programs.
    Type "make bench" in this directory to do a basic test of the installation.


UNINSTALL uC++

  Option 1:

    * remove local build directory

      $ rm -rf uCPP

  Option 2:

    * remove non-local directories

      $ [sudo] u++-uninstall


NOTES

The file CONFIG is generated by the Makefile.  It contains definitions that are
specific to an installation on this type of machine.  This file is included by
many of the Makefiles in directories below this one.  Do not modify the CONFIG
file directly, rather, remove the CONFIG, modify the file ./Makefile, and start
at step 3 for building uC++.


AUTHORS

P. A. Buhr
and many others
